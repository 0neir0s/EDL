C51 COMPILER V9.56.0.0   RECEIVER_DEBUG                                                    03/06/2017 19:58:55 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE RECEIVER_DEBUG
OBJECT MODULE PLACED IN receiver_debug.OBJ
COMPILER INVOKED BY: Z:\home\achyuth_koneti\C51\BIN\C51.exe receiver_debug.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND
                    - TABS(2)

line level    source

   1          #include "at89c5131.h"
   2          #include "stdio.h"
   3          #include "math.h"
   4          
   5          #define LCD_data  P2                // LCD Data port
   6          
   7          
   8          void SPI_Init();
   9          void LCD_Init();
  10          void LCD_DataWrite(char dat);
  11          void LCD_CmdWrite(char cmd);
  12          void LCD_StringWrite(char * str, unsigned char len);
  13          void LCD_Ready();
  14          void sdelay(int delay);
  15          void Meas_init();
  16          void Timer_init();
  17          void Timer_reset();
  18          void print_char();
  19          
  20          sbit LCD_rs = P0^0;                 // LCD Register Select
  21          sbit LCD_rw = P0^1;                 // LCD Read/Write
  22          sbit LCD_en = P0^2;                 // LCD Enable
  23          sbit LCD_busy = P2^7;               // LCD Busy Flag
  24          sbit RX_pin = P3^1;
  25          
  26          int time_meas = 0;
  27          int thresh = 768;
  28          char RX_char[10] = {'-','-','-','-','-','-','-','-','-','-'};
  29          int bit_array[8];
  30          int fresh_flag = 1;
  31          int i_count = 0;
  32          int b_count = 0;
  33          int char_count = 0;
  34          int RX_value = 0;
  35          int overflow_count = 0;
  36          int start_flag = 1;
  37          
  38          void ex0_isr (void) interrupt 0
  39          {
  40   1        TR0 = 0;
  41   1        time_meas = TH0*256+TL0+overflow_count*65536;
  42   1        if(time_meas>0 && time_meas<2300)
  43   1        {
  44   2          if(time_meas>1200)
  45   2          {
  46   3            RX_char[i_count] = '0';
  47   3            if(start_flag)
  48   3            {
  49   4              bit_array[b_count] = 0;
  50   4              b_count++;
  51   4              if(b_count==8) 
  52   4              {
  53   5                print_char();
  54   5                start_flag = 0;
C51 COMPILER V9.56.0.0   RECEIVER_DEBUG                                                    03/06/2017 19:58:55 PAGE 2   

  55   5                b_count = 0;
  56   5              }
  57   4            }
  58   3          }
  59   2          else if (time_meas < 700)
  60   2          {
  61   3            RX_char[i_count] = '2';
  62   3            start_flag = 1;
  63   3          }
  64   2          else
  65   2          {
  66   3            RX_char[i_count] = '1';
  67   3            if(start_flag)
  68   3            {
  69   4              bit_array[b_count] = 1;
  70   4              b_count++;
  71   4              if(b_count==8) 
  72   4              {
  73   5                print_char();
  74   5                start_flag = 0;
  75   5                b_count = 0;
  76   5              }
  77   4            }
  78   3          }
  79   2          i_count = (i_count +1)%9 ;
  80   2        }
  81   1        Timer_reset();
  82   1        overflow_count = 0;
  83   1        TR0 = 1;//TImer_start();
  84   1      }
  85          
  86          
  87          void timer0_ISR (void) interrupt 1
  88          {
  89   1        overflow_count++;   /* Increment the overflow count */
  90   1      }
  91          
  92          void main(void)
  93          {
  94   1        LCD_Init();
  95   1        Timer_init();
  96   1        Meas_init();
  97   1        
  98   1        while(1)
  99   1        {
 100   2          LCD_CmdWrite(0x80);     // Cursor to First line First Position
 101   2          LCD_StringWrite(RX_char,10);
 102   2          //LCD_StringWrite(bit_array,8);
 103   2        }
 104   1      }
 105           // FUNCTION_PURPOSE:LCD Initialization
 106           // FUNCTION_INPUTS: void
 107           // FUNCTION_OUTPUTS: none
 108           
 109          void LCD_Init()
 110          {
 111   1        sdelay(100);
 112   1        LCD_CmdWrite(0x38);     // LCD 2lines, 5*7 matrix
 113   1        LCD_CmdWrite(0x0E);     // Display ON cursor ON  Blinking off
 114   1        LCD_CmdWrite(0x01);     // Clear the LCD
 115   1        LCD_CmdWrite(0x80);     // Cursor to First line First Position
 116   1      }
C51 COMPILER V9.56.0.0   RECEIVER_DEBUG                                                    03/06/2017 19:58:55 PAGE 3   

 117          
 118          /**
 119           * FUNCTION_PURPOSE: Write Command to LCD
 120           * FUNCTION_INPUTS: cmd- command to be written
 121           * FUNCTION_OUTPUTS: none
 122           */
 123          void LCD_CmdWrite(char cmd)
 124          {
 125   1        LCD_Ready();
 126   1        LCD_data=cmd;           // Send the command to LCD
 127   1        LCD_rs=0;               // Select the Command Register by pulling LCD_rs LOW
 128   1        LCD_rw=0;               // Select the Write Operation  by pulling RW LOW
 129   1        LCD_en=1;               // Send a High-to-Low Pusle at Enable Pin
 130   1        sdelay(5);
 131   1        LCD_en=0;
 132   1        sdelay(5);
 133   1      }
 134          
 135          /**
 136           * FUNCTION_PURPOSE: Write Command to LCD
 137           * FUNCTION_INPUTS: dat- data to be written
 138           * FUNCTION_OUTPUTS: none
 139           */
 140          void LCD_DataWrite( char dat)
 141          {
 142   1        LCD_Ready();
 143   1        LCD_data=dat;           // Send the data to LCD
 144   1        LCD_rs=1;               // Select the Data Register by pulling LCD_rs HIGH
 145   1        LCD_rw=0;               // Select the Write Operation by pulling RW LOW
 146   1        LCD_en=1;               // Send a High-to-Low Pusle at Enable Pin
 147   1        sdelay(5);
 148   1        LCD_en=0;
 149   1        sdelay(5);
 150   1      }
 151          /**
 152           * FUNCTION_PURPOSE: Write a string on the LCD Screen
 153           * FUNCTION_INPUTS: 1. str - pointer to the string to be written, 
 154                              2. length - length of the array
 155           * FUNCTION_OUTPUTS: none
 156           */
 157          void LCD_StringWrite( char * str, unsigned char length)
 158          {
 159   1          while(length>0)
 160   1          {
 161   2              LCD_DataWrite(*str);
 162   2              str++;
 163   2              length--;
 164   2          }
 165   1      }
 166          
 167          /**
 168           * FUNCTION_PURPOSE: To check if the LCD is ready to communicate
 169           * FUNCTION_INPUTS: void
 170           * FUNCTION_OUTPUTS: none
 171           */
 172          void LCD_Ready()
 173          {
 174   1        LCD_data = 0xFF;
 175   1        LCD_rs = 0;
 176   1        LCD_rw = 1;
 177   1        LCD_en = 0;
 178   1        sdelay(5);
C51 COMPILER V9.56.0.0   RECEIVER_DEBUG                                                    03/06/2017 19:58:55 PAGE 4   

 179   1        LCD_en = 1;
 180   1        while(LCD_busy == 1)
 181   1        {
 182   2          LCD_en = 0;
 183   2          LCD_en = 1;
 184   2        }
 185   1        LCD_en = 0;
 186   1      }
 187          
 188          /**
 189           * FUNCTION_PURPOSE: A delay of 15us for a 24 MHz crystal
 190           * FUNCTION_INPUTS: void
 191           * FUNCTION_OUTPUTS: none
 192           */
 193          void sdelay(int delay)
 194          {
 195   1        char d=0;
 196   1        while(delay>0)
 197   1        {
 198   2          for(d=0;d<5;d++);
 199   2          delay--;
 200   2        }
 201   1      }
 202          void Timer_init()
 203          {
 204   1        TMOD = 0x01;
 205   1        TH0 = 0x00;
 206   1        TL0 = 0x00;
 207   1      }
 208          void Timer_reset()
 209          {
 210   1        TH0 = 0;
 211   1        TL0 = 0;
 212   1      }
 213          void Meas_init()
 214          {
 215   1        EA = 1;
 216   1        ET0 = 1;
 217   1        EX0 = 1;
 218   1        IT0 = 1;
 219   1      }
 220          void print_char()
 221          {
 222   1        RX_char[9] = (char) (128*bit_array[7]+64*bit_array[6]+32*bit_array[5]+16*bit_array[4]+8*bit_array[3]+4*bi
             -t_array[2]+2*bit_array[1]+bit_array[0]);
 223   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    593    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     44       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
